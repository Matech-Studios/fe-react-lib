name: fe-react-lib - Continuous Deployment

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: write
  packages: write

concurrency:
  group: fe-react-lib-cd-${{ github.ref }}
  cancel-in-progress: false

jobs:
  updates_version:
    name: Update package version on main
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    outputs:
      package_version: ${{ steps.capture.outputs.version }}

    steps:
      - name: Checkout main (clean, no persisted creds)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: false

      - name: Generate & commit new version
        id: gen
        uses: ./.github/actions/generate-versioning
        with:
          version_deploy_token: ${{ secrets.VERSION_DEPLOY_TOKEN }}
          application_repo: fe-react-lib

      # Expose the computed version as a job output (no leading 'v')
      - name: Capture version output
        id: capture
        run: echo "version=${{ steps.gen.outputs.new_version }}" >> "$GITHUB_OUTPUT"

  publish_gpr:
    name: Publish to GitHub Packages
    if: github.event.pull_request.merged == true
    needs: updates_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main (after bump was pushed)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Use Node.js 20 and configure GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://npm.pkg.github.com
          scope: '@matech-studios'
          cache: 'yarn'

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      # Ensure package.json matches the computed version (no 'v')
      - name: Update package.json to computed version (no tag)
        run: npm version "${PACKAGE_VERSION}" --no-git-tag-version
        env:
          PACKAGE_VERSION: ${{ needs.updates_version.outputs.package_version }}

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish