name: fe-react-lib - Continuous Deployment

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: write
  packages: write

jobs:
  updates_version:
    name: Updates package version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          # On PR closed we want the base branch (main), not the PR head
          ref: main
          token: ${{ secrets.VERSION_DEPLOY_TOKEN }}
          fetch-depth: 0

      - name: Modify version
        uses: ./.github/actions/generate-versioning
        with:
          version_deploy_token: ${{ secrets.VERSION_DEPLOY_TOKEN }}
          application_repo: fe-react-lib

      - name: Set up package version
        id: image_version
        run: |
          echo "IMAGE_VERSION=v$(jq -r .version package.json)" >> "$GITHUB_ENV"

    outputs:
      package_version: ${{ env.IMAGE_VERSION }}

  publish_gpr:
    name: Publish package to GitHub Packages
    runs-on: ubuntu-latest
    needs: updates_version

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Use Node.js 20 and configure registry
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com
          # Scope must match your GitHub org or user that owns the repo
          scope: '@matech-studios'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Update package version
        run: npm version "${PACKAGE_VERSION}" --no-git-tag-version
        env:
          PACKAGE_VERSION: ${{ needs.updates_version.outputs.package_version }}

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          # GITHUB_TOKEN is enough for same-org publishing when permissions.packages=write
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}