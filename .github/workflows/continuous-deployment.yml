name: fe-react-lib - versioning & publish

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions: {}

concurrency:
  group: fe-react-lib-cd-${{ github.ref }}
  cancel-in-progress: false

jobs:
  updates_version:
    name: Update package version on main
    permissions:
      contents: read
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    outputs:
      package_version: ${{ steps.capture.outputs.version }}

    steps:
      - name: Mint GitHub App installation token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.MATECH_APP_ID }}
          private-key: ${{ secrets.MATECH_APP_PRIVATE_KEY }}
          # owner and repositories are auto-detected for this repo

      - name: Checkout main (clean, no persisted creds)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true
          token: ${{ steps.app-token.outputs.token }}

      - name: Generate & commit new version
        id: gen
        uses: ./.github/actions/generate-versioning
        with:
          version_deploy_token: ${{ steps.app-token.outputs.token }}
          application_repo: fe-react-lib
          target_branch: main

      # Expose the computed version as a job output (no leading 'v')
      - name: Capture version output
        id: capture
        run: echo "version=${{ steps.gen.outputs.new_version }}" >> "$GITHUB_OUTPUT"

  publish_gpr:
    name: Publish to GitHub Packages
    permissions:
      contents: read
      packages: write
    if: github.event.pull_request.merged == true
    needs: updates_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main (after bump was pushed)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Use Node.js 20 and configure GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://npm.pkg.github.com
          scope: '@matech-studios'
          cache: 'yarn'

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      # Ensure package.json matches the computed version (no 'v')
      - name: Update package.json to computed version (no tag)
        run: |
          CURRENT="$(jq -r .version package.json)"
          if [ "$CURRENT" = "${PACKAGE_VERSION}" ]; then
            echo "package.json already at ${PACKAGE_VERSION}, skipping"
          else
            npm version "${PACKAGE_VERSION}" --no-git-tag-version
          fi
        env:
          PACKAGE_VERSION: ${{ needs.updates_version.outputs.package_version }}

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish
